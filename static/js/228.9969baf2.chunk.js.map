{"version":3,"file":"static/js/228.9969baf2.chunk.js","mappings":"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","sources":["pages/Login/Login.jsx","pages/Register/Register.styled.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport LoginImg from '../../img/login_bg.jpg';\nimport { StyledNavLink } from 'pages/Register/Register.styled';\nimport { authSelectors } from 'redux/auth/selectors';\nimport { Notify } from 'notiflix';\n\nconst theme = createTheme();\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  const { logInError } = useSelector(authSelectors.selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isFormSubmitted && logInError) {\n      Notify.failure(\n        `Did not manage to log in. Check out your email and password`,\n        {\n          position: 'center-top',\n        }\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [logInError]);\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'email':\n        setEmail(e.target.value);\n        break;\n      case 'password':\n        setPassword(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(logIn({ email: email, password: password }));\n    setIsFormSubmitted(true);\n  };\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const buttonText = 'Log in';\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: `url(${LoginImg})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'right',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              pt: 5,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: '#3A526A' }} />\n            <Typography component=\"h1\" variant=\"h5\">\n              Log in\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              sx={{ width: '100%', mt: 1 }}\n            >\n              <TextField\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                title=\"Email should be valid and include '@'\"\n                value={email}\n                onChange={handleChange}\n                id=\"login-email\"\n                required\n                sx={{ width: '100%', mb: '10px' }}\n              />\n              <TextField\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                label=\"Password\"\n                title=\"Password should contain at least one lowercase letter(a - z), one uppercase letter(A - Z) and one numeric value(0-9). The total length should be greater than or equal to 8 and less or equal to 20\"\n                pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,20}$\"\n                value={password}\n                onChange={handleChange}\n                id=\"login-password\"\n                required\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n                sx={{ width: '100%', marginBottom: '10px' }}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {buttonText.toUpperCase()}\n              </Button>\n              <StyledNavLink to=\"/register\">\n                Don't have an account? Sign Up\n              </StyledNavLink>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default Login;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledNavLink = styled(NavLink)`\n  color: #1976d2;\n  text-align: center;\n  text-decoration: underline;\n  display: block;\n  font-size: 14px;\n`;\n"],"names":["theme","createTheme","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","isFormSubmitted","setIsFormSubmitted","logInError","useSelector","authSelectors","dispatch","useDispatch","useEffect","Notify","position","handleChange","e","target","name","value","ThemeProvider","Grid","container","component","sx","height","CssBaseline","item","xs","sm","md","backgroundImage","LoginImg","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","pt","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","onSubmit","preventDefault","logIn","width","mt","TextField","type","label","title","onChange","id","required","mb","pattern","InputProps","endAdornment","InputAdornment","IconButton","onClick","edge","VisibilityOff","Visibility","marginBottom","Button","fullWidth","toUpperCase","to","StyledNavLink","styled","NavLink"],"sourceRoot":""}