{"version":3,"file":"static/js/643.cb7e6c8d.chunk.js","mappings":"kXAiBMA,GAAQC,EAAAA,EAAAA,KAwId,UAtIiB,WACf,OAA8BC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAxE,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwCL,EAAAA,EAAAA,WAAS,GAAjD,eAAOM,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnBN,GAAW,kBAAKD,GAAN,cAAgBO,EAAEC,OAAOX,KAAOU,EAAEC,OAAOC,QACpD,EAYD,OACE,SAAC,IAAD,CAAef,MAAOA,EAAtB,UACE,UAAC,KAAD,CAAMgB,WAAS,EAACC,UAAU,OAAOC,GAAI,CAAEC,OAAQ,SAA/C,WACE,SAAC,KAAD,KACA,SAAC,KAAD,CACEC,MAAI,EACJC,IAAI,EACJC,GAAI,EACJC,GAAI,EACJL,GAAI,CACFM,gBAAiB,0CACjBC,iBAAkB,YAClBC,gBAAiB,SAAAC,GAAC,MACG,UAAnBA,EAAEC,QAAQC,KACNF,EAAEC,QAAQE,KAAK,IACfH,EAAEC,QAAQE,KAAK,IAHH,EAIlBC,eAAgB,QAChBC,mBAAoB,aAGxB,SAAC,KAAD,CAAMZ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGN,UAAWgB,EAAAA,EAAOC,UAAW,EAAGC,QAAM,EAAvE,UACE,UAAC,IAAD,CACEjB,GAAI,CACFkB,GAAI,EACJC,GAAI,EACJC,QAAS,OACTC,cAAe,SACfC,WAAY,UANhB,WASE,SAAC,IAAD,CAAQtB,GAAI,CAAEuB,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYzB,UAAU,KAAK0B,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CAAK1B,UAAU,OAAO2B,SA/CX,SAAA/B,GACnBA,EAAEgC,iBACFnC,GAASoC,EAAAA,EAAAA,IAAOxC,IAChBC,EAAW,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAC7C,EA2CuDa,GAAI,CAAE6B,GAAI,GAAxD,WACE,SAAC,IAAD,CACEC,KAAK,OACL7C,KAAK,OACL8C,MAAM,OACNlC,MAAOT,EAAQH,KACf+C,SAAUtC,EACVuC,GAAG,cACHC,UAAQ,EACRlC,GAAI,CAAEmC,MAAO,OAAQC,aAAc,QACnCC,WAAY,CACVC,WAAY,CACVC,QACE,yHACFC,MACE,8IAIR,SAAC,IAAD,CACEV,KAAK,QACL7C,KAAK,QACL8C,MAAM,QACNS,MAAM,wCACN3C,MAAOT,EAAQF,MACf8C,SAAUtC,EACVuC,GAAG,eACHC,UAAQ,EACRlC,GAAI,CAAEmC,MAAO,OAAQC,aAAc,QACnCC,WAAY,CACVC,WAAY,CACVE,MAAO,6CAIb,SAAC,IAAD,CACEV,KAAMxC,EAAe,OAAS,WAC9BL,KAAK,WACL8C,MAAM,WACNlC,MAAOT,EAAQD,SACf6C,SAAUtC,EACVuC,GAAG,kBACHC,UAAQ,EACRlC,GAAI,CAAEmC,MAAO,OAAQC,aAAc,QACnCC,WAAY,CACVC,WAAY,CACVC,QAAS,6CACTC,MACE,uMAEJC,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,CACE,aAAW,6BACXC,QAhGU,WAC9BpD,GAAiBD,EAClB,EA+FqBsD,KAAK,MAHP,SAKGtD,GAAe,SAAC,IAAD,KAAoB,SAAC,IAAD,YAM9C,SAAC,IAAD,CACEwC,KAAK,SACLe,WAAS,EACTpB,QAAQ,YACRzB,GAAI,CAAE6B,GAAI,EAAGiB,GAAI,GAJnB,SArGO,UA2GOC,4BAQ3B,C","sources":["pages/Register/Register.jsx"],"sourcesContent":["import { signUp } from 'redux/auth/operations';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nconst Register = () => {\n  const [newUser, setNewUser] = useState({ name: '', email: '', password: '' });\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(signUp(newUser));\n    setNewUser({ name: '', email: '', password: '' });\n  };\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const buttonText = 'Sign up';\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(https://source.unsplash.com/random)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n              <TextField\n                type=\"text\"\n                name=\"name\"\n                label=\"Name\"\n                value={newUser.name}\n                onChange={handleChange}\n                id=\"signup-name\"\n                required\n                sx={{ width: '100%', marginBottom: '10px' }}\n                InputProps={{\n                  inputProps: {\n                    pattern:\n                      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n                    title:\n                      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n                  },\n                }}\n              />\n              <TextField\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                title=\"Email should be valid and include '@'\"\n                value={newUser.email}\n                onChange={handleChange}\n                id=\"signup-email\"\n                required\n                sx={{ width: '100%', marginBottom: '10px' }}\n                InputProps={{\n                  inputProps: {\n                    title: \"Email should be valid and include '@'\",\n                  },\n                }}\n              />\n              <TextField\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                label=\"Password\"\n                value={newUser.password}\n                onChange={handleChange}\n                id=\"signup-password\"\n                required\n                sx={{ width: '100%', marginBottom: '10px' }}\n                InputProps={{\n                  inputProps: {\n                    pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,20}$',\n                    title:\n                      'Password should contain at least one lowercase letter(a - z), one uppercase letter(A - Z) and one numeric value(0-9). The total length should be greater than or equal to 8 and less or equal to 20',\n                  },\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {buttonText.toUpperCase()}\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default Register;\n"],"names":["theme","createTheme","useState","name","email","password","newUser","setNewUser","showPassword","setShowPassword","dispatch","useDispatch","handleChange","e","target","value","container","component","sx","height","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","m","bgcolor","variant","onSubmit","preventDefault","signUp","mt","type","label","onChange","id","required","width","marginBottom","InputProps","inputProps","pattern","title","endAdornment","position","onClick","edge","fullWidth","mb","toUpperCase"],"sourceRoot":""}